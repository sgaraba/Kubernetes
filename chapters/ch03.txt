kubectl get po <pod_name> -o yaml

http://kubernetes.io/docs/api

kubectl explain pods
kubectl explain pod.spec

kubectl create -f kubia-manual.yaml

#Get pod info in json format
kubectl get po kubia-manual -o json

#Get pods labels
kubectl get po --show-labels
kubectl get po -L creation_method,env

#Create label
kubectl label po <pod_name> <key=value>
kubectl get po -l env

#Overwrite label
kubectl label po <pod_name> env=debug --overwrite

#Show modules list with label selector
kubectl get po -l creation_method=manual

#Show modules that include label 'env'
kubectl get po -l env

#Show modules that not include label 'env'
kubectl get po -l '!env'

kubectl get po -l creation_method!=manual
kubectl get po -l 'env in (debug,devel)'
kubectl get po -l 'env notin (debug,devel)'

#Add label to node
kubectl label node minikube gpu=true
kubectl get nodes -l gpu=true

#Add annotation
kubectl annotate pod kubia-manual sgaraba.com/someannotation="foo bar"

#List namespaces
kubectl get ns

#List pods from namespaces 'kube-system'
kubectl get po --namespace kube-system

#Create namespace
kubectl create -f yml/custom-namespace.yml or kubectl create namespace custom-namespace

#Create pod in specifc namespace
kubectl create -f yml/kubia-manual.yaml -n custom-namespace

kubectl logs <pod_name>
kubectl logs -f <pod_name>
kubectl logs <pod_name> -c <container_name>

#Delete pod by name
kubectl delete po kubia-manual

#Delete pod by label
kubectl delete po -l creation_method=manual

#

#Port forward
kubectl port-forward <pod_name> 8888:8080

#Switch namespace
kubectl config set-context minikube --namespace=<namespace_name>

